(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{105:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=o.a.createContext({}),p=function(e){var t=o.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return o.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,m=u["".concat(l,".").concat(d)]||u[d]||b[d]||a;return n?o.a.createElement(m,i(i({ref:t},s),{},{components:n})):o.a.createElement(m,i({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var s=2;s<a;s++)l[s]=n[s];return o.a.createElement.apply(null,l)}return o.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},85:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return p}));var r=n(3),o=n(7),a=(n(0),n(105)),l={id:"sitecore_mvc_internals",title:"Sitecore MVC Internals - IControllerActivator"},i={unversionedId:"sitecore_mvc_internals",id:"sitecore_mvc_internals",isDocsHomePage:!1,title:"Sitecore MVC Internals - IControllerActivator",description:"When we previously looked into IControllerFactory implementations in both Sitecore MVC and standard ASP.NET MVC, we noticed that Microsoft\u2019s default IControllerFactory implementation, DefaultControllerFactory, doesn\u2019t actually handle the instantiation of new IController instances. To enable dependency injection at the point of object creation, DefaultControllerFactory hands off instantiation of IController objects to another player \u2013 an object which implements IControllerActivator.",source:"@site/docs/2017_sitecore_icontroller.md",slug:"/sitecore_mvc_internals",permalink:"/sitecore_mvc_internals",version:"current",sidebar:"someSidebar",previous:{title:"Error - Could not find method Process.Pipeline",permalink:"/could_not_find_process_pipeline"},next:{title:"Sitecore MVC internals - SitecoreControllerFactory",permalink:"/sitecore_mvc_internals_factory"}},c=[{value:"How we call an IControllerActivator implementation",id:"how-we-call-an-icontrolleractivator-implementation",children:[]},{value:"What is Microsoft\u2019s default implementation?",id:"what-is-microsofts-default-implementation",children:[]}],s={toc:c};function p(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"When we previously looked into ",Object(a.b)("inlineCode",{parentName:"p"},"IControllerFactory")," implementations in both Sitecore MVC and standard ASP.NET MVC, we noticed that Microsoft\u2019s default ",Object(a.b)("inlineCode",{parentName:"p"},"IControllerFactory")," implementation, ",Object(a.b)("inlineCode",{parentName:"p"},"DefaultControllerFactory"),", doesn\u2019t actually handle the instantiation of new IController instances. To enable dependency injection at the point of object creation, ",Object(a.b)("inlineCode",{parentName:"p"},"DefaultControllerFactory")," hands off instantiation of ",Object(a.b)("inlineCode",{parentName:"p"},"IController")," objects to another player \u2013 an object which implements ",Object(a.b)("inlineCode",{parentName:"p"},"IControllerActivator"),"."),Object(a.b)("h3",{id:"how-we-call-an-icontrolleractivator-implementation"},"How we call an IControllerActivator implementation"),Object(a.b)("p",null,"Let\u2019s look back at the code for the ",Object(a.b)("inlineCode",{parentName:"p"},"GetControllerInstance")," method of Microsoft\u2019s ",Object(a.b)("inlineCode",{parentName:"p"},"DefaultControllerFactory")," class (see previous post for a more in-depth discussion)"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-csharp"}),"protected internal virtual IController GetControllerInstance(RequestContext requestContext, Type controllerType)\n{\n    //...\n    return this.ControllerActivator.Create(requestContext, controllerType);\n}\n")),Object(a.b)("p",null,"This method crucially takes in the Type of a controller, which we have determined by looking carefully at the requested URL and matching it to a known route. We see that ",Object(a.b)("inlineCode",{parentName:"p"},"DefaultControllerFactory")," already has an implementation of ",Object(a.b)("inlineCode",{parentName:"p"},"IControllerActivator")," to work with, referenced by ",Object(a.b)("inlineCode",{parentName:"p"},"this.ControllerActivator"),"."),Object(a.b)("h3",{id:"what-is-microsofts-default-implementation"},"What is Microsoft\u2019s default implementation?"),Object(a.b)("p",null,"In standard ASP.NET MVC sites, this implementation is Microsoft\u2019s ",Object(a.b)("inlineCode",{parentName:"p"},"DefaultControllerActivator"),". Let\u2019s look at the ",Object(a.b)("inlineCode",{parentName:"p"},"DefaultControllerActivator"),".Create() method in full:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-csharp"}),"public IController Create(RequestContext requestContext, Type controllerType)\n{\n    try{\n            return (IController) (this._resolverThunk().GetService(controllerType) ?? Activator.CreateInstance(controllerType));\n    }\n    catch (Exception ex)\n    {\n            throw new InvalidOperationException(string.Format((IFormatProvider) CultureInfo.CurrentCulture, MvcResources.DefaultControllerFactory_ErrorCreatingController, new object[1]{(object) controllerType}), ex);\n    }\n}\n")),Object(a.b)("p",null,"Ignoring boilerplate, the line we\u2019re left with is:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-csharp"}),"(IController) (this._resolverThunk().GetService(controllerType) ?? Activator.CreateInstance(controllerType));\n")),Object(a.b)("p",null,"Don\u2019t be discouraged by the odd looking ",Object(a.b)("inlineCode",{parentName:"p"},"_resolverThunk()"),". This is a reference to the chosen Dependency Resolver for your project. Remembering that ASP.NET MVC was built for extendability at every point, a Dependency Resolver lets us have full control over how any object is created \u2013 typically using a Dependency Injection framework. We\u2019ll look at Dependency Resolvers in a future post."),Object(a.b)("p",null,"Back to the line above. If you have a Dependency Resolver in place, the ",Object(a.b)("inlineCode",{parentName:"p"},"GetService()")," method will use this resolver to return an instance of the IController you need to fulfil the request. If not, we fall back to good old ",Object(a.b)("inlineCode",{parentName:"p"},"Activator.CreateInstance()"),", which is the .NET frameworks vanilla way of creating new objects at runtime."),Object(a.b)("p",null,"Does Sitecore implement ",Object(a.b)("inlineCode",{parentName:"p"},"IControllerActivator"),"?"),Object(a.b)("p",null,"No, Sitecore doesn\u2019t utilise ",Object(a.b)("inlineCode",{parentName:"p"},"IControllerActivator"),". There\u2019s a simple reason \u2013 once Sitecore has determined the type of Controller you would like to create, it hands off the job of creating the controller to the ",Object(a.b)("inlineCode",{parentName:"p"},"mvc.createController")," Pipeline:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-csharp"}),"IController controller = PipelineService.Get().RunPipeline<CreateControllerArgs, IController>(\u201cmvc.createController\u201d, \n        new CreateControllerArgs(requestContext, controllerName), \n        (Func<CreateControllerArgs, IController>) (args => args.Result));\n")),Object(a.b)("p",null,"That\u2019s it for ",Object(a.b)("inlineCode",{parentName:"p"},"IControllerActivator"),", happy hacking!"))}p.isMDXComponent=!0}}]);