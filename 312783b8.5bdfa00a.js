(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{105:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return f}));var r=t(0),o=t.n(r);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=o.a.createContext({}),p=function(e){var n=o.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=p(e.components);return o.a.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},b=o.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(t),b=r,f=u["".concat(c,".").concat(b)]||u[b]||m[b]||i;return t?o.a.createElement(f,a(a({ref:n},l),{},{components:t})):o.a.createElement(f,a({ref:n},l))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,c=new Array(i);c[0]=b;var a={};for(var s in n)hasOwnProperty.call(n,s)&&(a[s]=n[s]);a.originalType=e,a.mdxType="string"==typeof e?e:r,c[1]=a;for(var l=2;l<i;l++)c[l]=t[l];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},82:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return a})),t.d(n,"toc",(function(){return s})),t.d(n,"default",(function(){return p}));var r=t(3),o=t(7),i=(t(0),t(105)),c={id:"finding_action_name_from_mvc_processor",title:"Finding the current Action name from an MVC pipeline processor"},a={unversionedId:"finding_action_name_from_mvc_processor",id:"finding_action_name_from_mvc_processor",isDocsHomePage:!1,title:"Finding the current Action name from an MVC pipeline processor",description:"Sitecore provides two pipeline hooks for tapping into an Action method at point of execution:",source:"@site/docs/2017_finding_action_name_from_mvc_processor.md",slug:"/finding_action_name_from_mvc_processor",permalink:"/finding_action_name_from_mvc_processor",version:"current",sidebar:"someSidebar",previous:{title:"A workaround for missing ViewData in Sitecore MVC",permalink:"/workaround_missing_viewdata_sitecore_mvc"},next:{title:"Returning JSON errors from Sitecore MVC controllers",permalink:"/returning_json_errors_from_sitecore_mvc_controllers"}},s=[],l={toc:s};function p(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Sitecore provides two pipeline hooks for tapping into an ",Object(i.b)("inlineCode",{parentName:"p"},"Action")," method at point of execution:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"mvc.actionExecuting")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"mvc.actionExecuted"))),Object(i.b)("p",null,"These follow standard MVC naming conventions \u2013 ",Object(i.b)("inlineCode",{parentName:"p"},"actionExecuting")," fires before your Action method executes, and ",Object(i.b)("inlineCode",{parentName:"p"},"actionExecuted")," fires afterwards."),Object(i.b)("p",null,"A process hooking into actionExecuting looks something like this:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-csharp"}),"public class LogActionExecuting\n{\n    public void Process(ActionExecutingArgs args)\n    {\n        //Something here\n    }\n}\n")),Object(i.b)("p",null,"At this point, it might be useful to get some information about the ",Object(i.b)("inlineCode",{parentName:"p"},"Action")," we\u2019re executing, or the Controller it belongs to. Sitecore allows us to access the MVC ",Object(i.b)("inlineCode",{parentName:"p"},"ActionDescriptor")," and ",Object(i.b)("inlineCode",{parentName:"p"},"ControllerDescriptor")," objects, which contain plenty of information about our ",Object(i.b)("inlineCode",{parentName:"p"},"Action")," and ",Object(i.b)("inlineCode",{parentName:"p"},"Controller"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-csharp"}),"public class LogActionExecuting\n{\n    public void Process(ActionExecutingArgs args)\n    {\n        //Some interesting items from the Action\n        var actionName = args.Context.ActionDescriptor.ActionName;\n        var actionAttributes = args.Context.ActionDescriptor.GetCustomAttributes(false);\n           \n        //Some interesting items from the Controller\n        var controllerName = args.Context.ActionDescriptor.ControllerDescriptor.ControllerName;\n        var controllerType = args.Context.ActionDescriptor.ControllerDescriptor.ControllerType;\n        var controllerActions = args.Context.ActionDescriptor.ControllerDescriptor.GetCanonicalActions();\n \n        //args.Context.ActionDescriptor.Execute(..);\n \n    }\n}\n")),Object(i.b)("p",null,"The last line is commented out, as executing the action from within itself may cause the universe to implode. Maybe."),Object(i.b)("p",null,"Happy hacking!"))}p.isMDXComponent=!0}}]);