(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{90:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return c})),a.d(t,"toc",(function(){return i})),a.d(t,"default",(function(){return u}));var r=a(3),n=a(7),l=(a(0),a(97)),o={id:"contentsearch_quirks",title:"Sitecore 9 - ContentSearch Solr query quirks with spaces and wildcards"},c={unversionedId:"contentsearch_quirks",id:"contentsearch_quirks",isDocsHomePage:!1,title:"Sitecore 9 - ContentSearch Solr query quirks with spaces and wildcards",description:"Sitecore provides a Linq powered IQueryable mechanism with which you can build powerful search queries. Your query will be translated into a native query for your underlying search engine (eg. Solr). There are some odd quirks (bugs?) with this translation in Sitecore 9.0 and 9.0.1 when your search term includes a space. Let\u2019s take a look.",source:"@site/docs/2018_contentsearch_quirks.md",slug:"/contentsearch_quirks",permalink:"/contentsearch_quirks",version:"current",sidebar:"someSidebar",previous:{title:"Sitecore 9  - The partial view was not found or no view engine supports the searched locations.",permalink:"/partial_view_not_found"},next:{title:"Sitecore Solr Error - Processing Field Name. Resolving Multiple Field found on Solr Field Map. No matching template field on index field name, return type \u2018String\u2019 and field type \u201d",permalink:"/2018_solr_error"}},i=[],s={toc:i};function u(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(l.b)("wrapper",Object(r.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"Sitecore provides a Linq powered ",Object(l.b)("inlineCode",{parentName:"p"},"IQueryable")," mechanism with which you can build powerful search queries. Your query will be translated into a native query for your underlying search engine (eg. Solr). There are some odd quirks (bugs?) with this translation in Sitecore 9.0 and 9.0.1 when your search term includes a space. Let\u2019s take a look."),Object(l.b)("p",null,"In the below examples, context is an instance of ",Object(l.b)("inlineCode",{parentName:"p"},"IProviderSearchContext"),", which you\u2019d typically wire up with dependency injection. In each case, we\u2019re looking to query something from the index based the item\u2019s path in the Sitecore tree."),Object(l.b)("h4",{id:"querying-on-exact-matches"},"Querying on exact matches:"),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-csharp"}),'context.GetQueryable().Where(x => x.Path == "Hello");\n Translates to: {_fullpath:(Hello)}\n')),Object(l.b)("p",null,"Ok! This makes sense."),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-csharp"}),'context.GetQueryable().Where(x => x.Path == "Hello World");\n Translates to: {_fullpath:("Hello World")}\n')),Object(l.b)("p",null,"Notice that if your query term has a space, we need to wrap the term in quotes."),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-csharp"}),'context.GetQueryable().Where(x => x.Path == "\\\\Hello");\n Translates to: {_fullpath:(\\\\Hello)}\n')),Object(l.b)("p",null,"Backslash? No problem."),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-csharp"}),'context.GetQueryable().Where(x => x.Path == "/Hello");\n Translates to: {_fullpath:(\\/Hello)}\n')),Object(l.b)("p",null,"Forwardslash? We need to escape that with a ",Object(l.b)("inlineCode",{parentName:"p"},"\u2018\\\u2019")),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-csharp"}),'context.GetQueryable().Where(x => x.Path == "\\\\Hello World");\n Translates to: {_fullpath:("\\\\Hello World")}\n')),Object(l.b)("p",null,"Backslash with space? No problem, just add the quotes."),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-csharp"}),'context.GetQueryable().Where(x => x.Path == "/Hello World");\n Translates to: {_fullpath:("\\/Hello World")}\n')),Object(l.b)("p",null,"As above, we\u2019re all good, the forwardslash is just escaped."),Object(l.b)("p",null,"Querying on partial matches \u2013 where things get interesting:"),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-csharp"}),'context.GetQueryable().Where(x => x.Path.Contains("Hello"));\n Translates to: {_fullpath:(*Hello*)}\n')),Object(l.b)("p",null,"All good. Here, we wrap our search term in a wildcard, ",Object(l.b)("inlineCode",{parentName:"p"},"*")),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-csharp"}),'context.GetQueryable().Where(x => x.Path.Contains("Hello World"));\n Translates to: {_fullpath:("\\*Hello\\\\ World\\*")}\n')),Object(l.b)("p",null,"Uh oh! Something weird has happened. The quotes and wildcard seem to have got mixed up, and we\u2019ve ended up with something which won\u2019t return the results we want. Having read more about wildcard / space combinations here , we probably want to end up with something simpler, like ",Object(l.b)("inlineCode",{parentName:"p"},"{_fullpath:(*Hello\\ World*)}")),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-csharp"}),'context.GetQueryable().Where(x => x.Path.Contains("\\\\Hello"));\n Translates to: {_fullpath:(*\\\\Hello*)}\n')),Object(l.b)("p",null,"No problem with this partial match, as we don\u2019t have a space to deal with."),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-csharp"}),'context.GetQueryable().Where(x => x.Path.Contains("/Hello"));\n Translates to: {_fullpath:(*\\/Hello*)}\n')),Object(l.b)("p",null,"Again, fine."),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-csharp"}),'context.GetQueryable().Where(x => x.Path.Contains("\\\\Hello World"));\n Translates to: {_fullpath:("\\*\\\\Hello\\\\ World\\*")}\n')),Object(l.b)("p",null,"The space completely breaks everything here"),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-csharp"}),'context.GetQueryable().Where(x => x.Path.Contains("/Hello World"));\n Translates to: {_fullpath:("\\*\\/Hello\\\\ World\\*")}\n')),Object(l.b)("p",null,"and here.."),Object(l.b)("h4",{id:"summary"},"Summary"),Object(l.b)("p",null,"I raised this with Sitecore and it has been raised as a bug. In the meantime \u2013 if you can get away with using StartsWith rather than Contains, you\u2019ll find this works OK:"),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-csharp"}),'context.GetQueryable().Where(x => x.Path.StartsWith("Hello World"));\n Translates to: {_fullpath:(Hello\\ World*)}\n')),Object(l.b)("p",null,"Which is just about perfect."))}u.isMDXComponent=!0},97:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return d}));var r=a(0),n=a.n(r);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=n.a.createContext({}),u=function(e){var t=n.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},p=function(e){var t=u(e.components);return n.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},h=n.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),p=u(a),h=r,d=p["".concat(o,".").concat(h)]||p[h]||b[h]||l;return a?n.a.createElement(d,c(c({ref:t},s),{},{components:a})):n.a.createElement(d,c({ref:t},s))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=h;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var s=2;s<l;s++)o[s]=a[s];return n.a.createElement.apply(null,o)}return n.a.createElement.apply(null,a)}h.displayName="MDXCreateElement"}}]);