(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{105:function(e,t,o){"use strict";o.d(t,"a",(function(){return p})),o.d(t,"b",(function(){return m}));var n=o(0),r=o.n(n);function i(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function c(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){i(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var s=r.a.createContext({}),d=function(e){var t=r.a.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):c(c({},t),e)),o},p=function(e){var t=d(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var o=e.components,n=e.mdxType,i=e.originalType,a=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=d(o),b=n,m=p["".concat(a,".").concat(b)]||p[b]||u[b]||i;return o?r.a.createElement(m,c(c({ref:t},s),{},{components:o})):r.a.createElement(m,c({ref:t},s))}));function m(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=o.length,a=new Array(i);a[0]=b;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:n,a[1]=c;for(var s=2;s<i;s++)a[s]=o[s];return r.a.createElement.apply(null,a)}return r.a.createElement.apply(null,o)}b.displayName="MDXCreateElement"},145:function(e,t,o){"use strict";o.r(t),t.default=o.p+"assets/images/2021_sitecore_docker_zookeeper_5-862e03843707ee36369f74f82a2c1491.png"},146:function(e,t,o){"use strict";o.r(t),t.default=o.p+"assets/images/2021_sitecore_docker_zookeeper_7-8b2b89914542b6a886d3e36d57039110.png"},147:function(e,t,o){"use strict";o.r(t),t.default=o.p+"assets/images/2021_sitecore_docker_zookeeper_6-6d7f08d20727f5045f2973cd9c72dc8e.png"},148:function(e,t,o){"use strict";o.r(t),t.default=o.p+"assets/images/2021_sitecore_docker_zookeeper_1-221e2968bd1fc01dca6a7bd678e3e87b.png"},149:function(e,t,o){"use strict";o.r(t),t.default=o.p+"assets/images/2021_sitecore_docker_zookeeper_2-b9fde03c638a7a39663737fbeb35f134.png"},150:function(e,t,o){"use strict";o.r(t),t.default=o.p+"assets/images/2021_sitecore_docker_zookeeper_3-caa44ea30501e42c9a466dd342c9a711.png"},151:function(e,t,o){"use strict";o.r(t),t.default=o.p+"assets/images/2021_sitecore_docker_zookeeper_11-1ade3deaab22f2b46d4c23796b843ce0.png"},152:function(e,t,o){"use strict";o.r(t),t.default=o.p+"assets/images/2021_sitecore_docker_zookeeper_8-447ea4533b4ab2bbeffc5bbe60e3a442.png"},153:function(e,t,o){"use strict";o.r(t),t.default=o.p+"assets/images/2021_sitecore_docker_zookeeper_9-8a45e395973c11de4d29dc6c57c98f48.png"},154:function(e,t,o){"use strict";o.r(t),t.default=o.p+"assets/images/2021_sitecore_docker_zookeeper_10-c186359ff7ef4242013560a5d4af9e1e.png"},65:function(e,t,o){"use strict";o.r(t),o.d(t,"frontMatter",(function(){return a})),o.d(t,"metadata",(function(){return c})),o.d(t,"toc",(function(){return l})),o.d(t,"default",(function(){return d}));var n=o(3),r=o(7),i=(o(0),o(105)),a={id:"sitecore_10_zookeeper_docker",title:"Adding ZooKeeper to your Sitecore 10 Docker install"},c={unversionedId:"sitecore_10_zookeeper_docker",id:"sitecore_10_zookeeper_docker",isDocsHomePage:!1,title:"Adding ZooKeeper to your Sitecore 10 Docker install",description:"March 2021",source:"@site/docs/2021_sitecore_10_zookeeper_docker.md",slug:"/sitecore_10_zookeeper_docker",permalink:"/sitecore_10_zookeeper_docker",version:"current",sidebar:"someSidebar",previous:{title:"Chris Perks",permalink:"/"},next:{title:"Production Sitecore 10 AWS EKS deploys - connecting VPCs",permalink:"/sitecore_10_production_aws_deploys"}},l=[{value:"Solr in Production",id:"solr-in-production",children:[]},{value:"Creating a Windows ZooKeeper image to use with Sitecore",id:"creating-a-windows-zookeeper-image-to-use-with-sitecore",children:[]},{value:"Adding ZooKeeper to your docker-compose.yml",id:"adding-zookeeper-to-your-docker-composeyml",children:[]},{value:"Add three Solr nodes",id:"add-three-solr-nodes",children:[]},{value:"Begin!",id:"begin",children:[]},{value:"Check the status of your SolrCloud",id:"check-the-status-of-your-solrcloud",children:[]},{value:"Populate the schema",id:"populate-the-schema",children:[]},{value:"Perform initial indexing",id:"perform-initial-indexing",children:[]},{value:"Final status of our SolrCloud",id:"final-status-of-our-solrcloud",children:[]}],s={toc:l};function d(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"March 2021")),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"In this blog post, we boost our Sitecore development environment by launching multiple Solr nodes, coordinated by ZooKeeper within a Docker container"))),Object(i.b)("p",null,"Using Sitecore's ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/Sitecore/docker-examples/tree/master/getting-started"}),"starter Docker files"),", we get a single Solr instance, running in SolrCloud mode with a single node. "),Object(i.b)("p",null,Object(i.b)("img",{alt:"img",src:o(145).default})),Object(i.b)("p",null,"While this is fine for development testing, it is handy from time-to-time to experiment and test with more production-like Solr topologies."),Object(i.b)("h3",{id:"solr-in-production"},"Solr in Production"),Object(i.b)("p",null,"Let's refresh ourselves with guidance from Sitecore and the Solr project on what a good Production architecture looks like. "),Object(i.b)("h4",{id:"from-sitecore"},"From Sitecore"),Object(i.b)("blockquote",null,Object(i.b)("ul",{parentName:"blockquote"},Object(i.b)("li",{parentName:"ul"},"Solr Cloud 8.4.0 or higher must be hosted outside the Sitecore XP cluster"),Object(i.b)("li",{parentName:"ul"},"The external hosted services for Microsoft SQL Server, SolrCloud and RedisLabs Redis are\nrequired for production Kubernetes support from Sitecore."),Object(i.b)("li",{parentName:"ul"},"You must deploy and configure the external services for production use before you deploy\nSitecore XP to Kubernetes."))),Object(i.b)("p",null,Object(i.b)("img",{alt:"img",src:o(146).default})),Object(i.b)("h4",{id:"from-solr"},"From Solr"),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},'"Although Solr comes bundled with Apache ZooKeeper, you should consider yourself discouraged from using this internal ZooKeeper in production.')),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"Shutting down a redundant Solr instance will also shut down its ZooKeeper server, which might not be quite so redundant. Because a ZooKeeper ensemble must have a quorum of more than half its servers running at any given time, this can be a problem.")),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},'The solution to this problem is to set up an external ZooKeeper ensemble." ')),Object(i.b)("p",null,"Source: ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://solr.apache.org/guide/6_6/setting-up-an-external-zookeeper-ensemble.html"}),"https://solr.apache.org/guide/6_6/setting-up-an-external-zookeeper-ensemble.html")),Object(i.b)("p",null,Object(i.b)("img",{alt:"img",src:o(147).default})),Object(i.b)("p",null,"Your redundancy requirements will determine exactly how many ZooKeeper and Solr nodes you use in a formation, but the foundational step for our local development environments is creating a separate ZooKeeper instance (within a container) and use that instance to manage our Solr instance (in a different container)"),Object(i.b)("h3",{id:"creating-a-windows-zookeeper-image-to-use-with-sitecore"},"Creating a Windows ZooKeeper image to use with Sitecore"),Object(i.b)("p",null,"While there are plenty of ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://hub.docker.com/search?q=zookeeper&type=image&operating_system=linux"}),"Linux ZooKeeper images on DockerHub"),", we need a Windows-compatible image to run alongside our other Windows Sitecore containers. "),Object(i.b)("p",null,"I ended up building my own image, and have included the ",Object(i.b)("inlineCode",{parentName:"p"},"Dockerfile")," for you, below, should you want to use it for your own development environments. "),Object(i.b)("p",null,"Here are some choices I made when creating the Dockerfile: "),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"I mostly drive the building of the image with Powershell, so base the image on the Microsoft Powershell base image. With some work you'll be able to get ZooKeeper running on a slimmer base image. "),Object(i.b)("li",{parentName:"ol"},"I handle the downloading of Java and ZooKeeper ",Object(i.b)("strong",{parentName:"li"},"within")," the creation of the image, simply to make this image self-contained, so you can just download the file and run ",Object(i.b)("inlineCode",{parentName:"li"},"docker build .")," on your machine, and everything will work.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-docker",metastring:'title="Dockerfile"',title:'"Dockerfile"'}),"FROM mcr.microsoft.com/powershell\n\nSHELL [\"powershell\", \"-Command\", \"$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';\"]\n\n# Set Environment Variables \nENV JAVA_HOME=C:/openjdk-11\nRUN $newPath = ('{0}\\bin;{1}' -f $env:JAVA_HOME, $env:PATH); Write-Host ('Updating PATH: {0}' -f $newPath); setx /M PATH $newPath\nENV JAVA_VERSION=11.0.1\nENV JAVA_URL=https://download.java.net/java/GA/jdk11/13/GPL/openjdk-11.0.1_windows-x64_bin.zip\nENV JAVA_SHA256=289dd06e06c2cbd5e191f2d227c9338e88b6963fd0c75bceb9be48f0394ede21\nENV ZK_HOME=C:/apache-zookeeper\nENV ZK_URL=https://downloads.apache.org/zookeeper/zookeeper-3.6.2/apache-zookeeper-3.6.2-bin.tar.gz\n\n# Install Java\nRUN Write-Host ('Downloading {0} ...' -f $env:JAVA_URL);    [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12;    Invoke-WebRequest -Uri $env:JAVA_URL -OutFile 'openjdk.zip';    Write-Host ('Verifying sha256 ({0}) ...' -f $env:JAVA_SHA256);  if ((Get-FileHash openjdk.zip -Algorithm sha256).Hash -ne $env:JAVA_SHA256) {       Write-Host 'FAILED!';       exit 1;     };      Write-Host 'Expanding ...';     New-Item -ItemType Directory -Path C:\\temp | Out-Null;  Expand-Archive openjdk.zip -DestinationPath C:\\temp;    Move-Item -Path C:\\temp\\* -Destination $env:JAVA_HOME;  Remove-Item C:\\temp;        Write-Host 'Verifying install ...';     Write-Host '  java --version'; java --version;  Write-Host '  javac --version'; javac --version;        Write-Host 'Removing ...';  Remove-Item openjdk.zip -Force;         Write-Host 'Complete.'\n\n# Install ZooKeeper\nRUN Write-Host ('Downloading {0} ...' -f $env:ZK_URL);  [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12;    Invoke-WebRequest -Uri $env:ZK_URL -OutFile 'zk.tar.gz';    Write-Host 'Expanding ...';     New-Item -ItemType Directory -Path C:\\temp | Out-Null;  tar -xf .\\zk.tar.gz -C c:/temp/;    Move-Item -Path C:\\temp\\* -Destination $env:ZK_HOME;    Remove-Item C:\\temp;        Write-Host 'Removing ...';  Remove-Item zk.tar.gz -Force;        $cfgPath = ('{0}\\conf\\zoo_sample.cfg' -f $env:ZK_HOME);      $newCfgPath = ('{0}\\conf\\zoo.cfg' -f $env:ZK_HOME);     Copy-Item $cfgPath -Destination $newCfgPath;      Write-Host 'Complete.'\nRUN Add-Content C:/apache-zookeeper/conf/zoo.cfg \"4lw.commands.whitelist=mntr`,conf`,ruok\"\n\n# Finish Up\nEXPOSE 2181\nWORKDIR C:/apache-zookeeper\nENTRYPOINT [\"C:/apache-zookeeper/bin/zkServer.cmd\"]\n")),Object(i.b)("p",null,"So, without further ado, let's build the image"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"> docker build -t zookeeper:v1 .\nSuccessfully built f4ab9c23f549\nSuccessfully tagged zookeeper:v1\n\n> docker image ls\nREPOSITORY             TAG            IMAGE ID\nzookeeper              v1             f4ab9c23f549\n")),Object(i.b)("h3",{id:"adding-zookeeper-to-your-docker-composeyml"},"Adding ZooKeeper to your docker-compose.yml"),Object(i.b)("p",null,"To illustrate how we can use ZooKeeper and multiple Solr nodes in our development environments, I'm working with the ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/Sitecore/docker-examples/tree/master/getting-started"}),"Sitecore Docker Examples getting-started")," fileset. If you're working along with the examples, check that repository out and edit the files in ",Object(i.b)("inlineCode",{parentName:"p"},"docker-examples/getting-started/")),Object(i.b)("p",null,"Open ",Object(i.b)("inlineCode",{parentName:"p"},"docker-compose.yml")," and add the following service definition above ",Object(i.b)("inlineCode",{parentName:"p"},"solr")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-docker",metastring:'title="docker-compose.yml"',title:'"docker-compose.yml"'}),"zk:\n  image: 'zookeeper:v1'\n  ports:\n    - '2181:2181'\n")),Object(i.b)("h3",{id:"add-three-solr-nodes"},"Add three Solr nodes"),Object(i.b)("p",null,"Replace your ",Object(i.b)("inlineCode",{parentName:"p"},"solr")," service definition with the three definitions below. They're mostly the same as the definition we're replacing, with two differences: "),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"We need to make sure each service has a different port mapping, eg. ",Object(i.b)("inlineCode",{parentName:"li"},'"8985:8983"')),Object(i.b)("li",{parentName:"ol"},"We override the ",Object(i.b)("inlineCode",{parentName:"li"},"entrypoint")," of the Solr container to ensure the node is registered with ZooKeeper")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-docker",metastring:'title="docker-compose.yml"',title:'"docker-compose.yml"'}),'solr:\n  isolation: ${ISOLATION}\n  image: ${SITECORE_DOCKER_REGISTRY}nonproduction/solr:8.4.0-${SITECORE_VERSION}\n  ports:\n    - "8984:8983"\n  volumes:\n    - type: bind\n      source: .\\solr-data\n      target: c:\\data\n  links:\n    - zk\n  environment:\n    SOLR_MODE: solrcloud\n  entrypoint: \n    - c:\\solr\\bin\\solr.cmd start -port 8983 -f -z zk:2181 -noprompt\nsolr2:\n  isolation: ${ISOLATION}\n  image: ${SITECORE_DOCKER_REGISTRY}nonproduction/solr:8.4.0-${SITECORE_VERSION}\n  ports:\n    - "8985:8983"\n  volumes:\n    - type: bind\n      source: .\\solr-data\n      target: c:\\data\n  links:\n    - zk\n  environment:\n    SOLR_MODE: solrcloud\n  entrypoint: \n    - c:\\solr\\bin\\solr.cmd start -port 8983 -f -z zk:2181 -noprompt\nsolr3:\n  isolation: ${ISOLATION}\n  image: ${SITECORE_DOCKER_REGISTRY}nonproduction/solr:8.4.0-${SITECORE_VERSION}\n  ports:\n    - "8986:8983"\n  volumes:\n    - type: bind\n      source: .\\solr-data\n      target: c:\\data\n  links:\n    - zk\n  environment:\n    SOLR_MODE: solrcloud\n  entrypoint: \n    - c:\\solr\\bin\\solr.cmd start -port 8983 -f -z zk:2181 -noprompt\n\n')),Object(i.b)("h3",{id:"begin"},"Begin!"),Object(i.b)("p",null,"OK. Now that we have a docker-compose.yml file with 1 x ZooKeeper and 3 x Solr nodes, let's run our containers. "),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),'PS C:\\Users\\Chris\\Code\\docker-examples\\getting-started> docker-compose up -d\nCreating network "sitecore-xp0_default" with the default driver\nCreating sitecore-xp0_mssql_1 ... done\nCreating sitecore-xp0_zk_1    ... done\nCreating sitecore-xp0_solr3_1 ... done\nCreating sitecore-xp0_solr2_1 ... done\nCreating sitecore-xp0_solr_1  ... done\nCreating sitecore-xp0_id_1    ... done\nCreating sitecore-xp0_solr-init_1 ... done\nCreating sitecore-xp0_xconnect_1  ... done\nCreating sitecore-xp0_cm_1        ... done\nCreating sitecore-xp0_xdbsearchworker_1        ... done\nCreating sitecore-xp0_cortexprocessingworker_1 ... done\nCreating sitecore-xp0_xdbautomationworker_1    ... done\nCreating sitecore-xp0_traefik_1                ... done\n')),Object(i.b)("h3",{id:"check-the-status-of-your-solrcloud"},"Check the status of your SolrCloud"),Object(i.b)("p",null,"Navigate to the Solr UI at ",Object(i.b)("inlineCode",{parentName:"p"},"http://localhost:8984/solr/#/"),". First, check ",Object(i.b)("inlineCode",{parentName:"p"},"Cloud > ZK Status")," to make sure ZooKeeper is happy. "),Object(i.b)("p",null,Object(i.b)("img",{alt:"img",src:o(148).default})),Object(i.b)("p",null,"Next, check ",Object(i.b)("inlineCode",{parentName:"p"},"Cloud > Nodes"),". Here, we can see which Solr nodes are hosting which collections. "),Object(i.b)("p",null,Object(i.b)("img",{alt:"img",src:o(149).default})),Object(i.b)("p",null,"Looking a bit more closely, we can see that our collections are all empty, and no documents are loaded yet. "),Object(i.b)("p",null,Object(i.b)("img",{alt:"img",src:o(150).default})),Object(i.b)("h3",{id:"populate-the-schema"},"Populate the schema"),Object(i.b)("p",null,"Once your Sitecore Docker containers are all up and running, you can use ",Object(i.b)("inlineCode",{parentName:"p"},"Sitecore > Control Panel > Populate Solr Managed Schema")," to do just that. "),Object(i.b)("p",null,Object(i.b)("img",{alt:"img",src:o(151).default})),Object(i.b)("h3",{id:"perform-initial-indexing"},"Perform initial indexing"),Object(i.b)("p",null,"Now, we can perform an initial index, by using ",Object(i.b)("inlineCode",{parentName:"p"},"Sitecore > Control Panel > Indexing Manager")),Object(i.b)("p",null,Object(i.b)("img",{alt:"img",src:o(152).default})),Object(i.b)("h3",{id:"final-status-of-our-solrcloud"},"Final status of our SolrCloud"),Object(i.b)("p",null,"Back in our Solr UI, we can refresh ",Object(i.b)("inlineCode",{parentName:"p"},"Cloud > Nodes")," to see our distributed set of collections nicely populated. "),Object(i.b)("p",null,Object(i.b)("img",{alt:"img",src:o(153).default})),Object(i.b)("p",null,Object(i.b)("img",{alt:"img",src:o(154).default})),Object(i.b)("p",null,"Have fun and come chat to me on Sitecore Slack if you have any questions."))}d.isMDXComponent=!0}}]);